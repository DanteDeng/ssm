<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- 配置使用注解驱动以及注解扫描的包 -->
	<mvc:annotation-driven />
	<context:component-scan base-package="com.dy" />
	<!-- 静态资源放行 -->
	<mvc:default-servlet-handler />

	<!-- 注解的处理器映射器 <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" 
		/> -->
	<!-- 注解的处理器适配器 <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter" 
		/> -->
	<!-- 配置视图解析器 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver" />

	<mvc:interceptors>
		<mvc:interceptor>
			<!-- 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller -->
			<mvc:mapping path="/**" />
			<!-- <mvc:mapping path="/user/*" />
			<mvc:mapping path="/role/*" />
			<mvc:mapping path="/permission/*" /> -->
			<mvc:exclude-mapping path="/Views/**" />
			<mvc:exclude-mapping path="/scripts/**" />
			<mvc:exclude-mapping path="/styles/**" />
			<mvc:exclude-mapping path="/images/**" />
			<mvc:exclude-mapping path="/lay*/**" />
			<mvc:exclude-mapping path="/Json/**" />
			<mvc:exclude-mapping path="/bootstrap*/**" />
			<mvc:exclude-mapping path="/user/userLog**" />
			<bean class="com.dy.controller.interceptor.CommonInterceptor"></bean>
		</mvc:interceptor>
		<!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->
	</mvc:interceptors>

	<!-- aop注解支持 -->
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>

</beans>